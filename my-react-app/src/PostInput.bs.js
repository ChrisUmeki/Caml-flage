// Generated by BUCKLESCRIPT VERSION 3.0.0, PLEASE EDIT WITH CARE
'use strict';

var Block = require("bs-platform/lib/js/block.js");
var Curry = require("bs-platform/lib/js/curry.js");
var React = require("react");
var ReasonReact = require("reason-react/src/ReasonReact.js");

function valueFromEvent(evt) {
  return evt.target.value;
}

var component = ReasonReact.reducerComponent("EditField");

function setInputElement(theRef, param) {
  param[/* state */2][/* inputElement */1][0] = (theRef == null) ? /* None */0 : [theRef];
  return /* () */0;
}

function make(initialText, onSubmit, _) {
  return /* record */[
          /* debugName */component[/* debugName */0],
          /* reactClassInternal */component[/* reactClassInternal */1],
          /* handedOffState */component[/* handedOffState */2],
          /* willReceiveProps */component[/* willReceiveProps */3],
          /* didMount */component[/* didMount */4],
          /* didUpdate */component[/* didUpdate */5],
          /* willUnmount */component[/* willUnmount */6],
          /* willUpdate */component[/* willUpdate */7],
          /* shouldUpdate */component[/* shouldUpdate */8],
          /* render */(function (param) {
              var text = param[/* state */2][/* text */0];
              var reduce = param[/* reduce */1];
              return React.createElement("input", {
                          ref: Curry._1(param[/* handle */0], setInputElement),
                          placeholder: "Todo description",
                          type: "text",
                          value: text,
                          onKeyDown: (function (evt) {
                              if (evt.key === "Enter") {
                                Curry._1(onSubmit, text);
                                return Curry._2(reduce, (function () {
                                              return "";
                                            }), /* () */0);
                              } else if (evt.key === "Escape") {
                                Curry._1(onSubmit, initialText);
                                return Curry._2(reduce, (function () {
                                              return "";
                                            }), /* () */0);
                              } else {
                                return 0;
                              }
                            }),
                          onChange: Curry._1(reduce, (function (evt) {
                                  return evt.target.value;
                                }))
                        });
            }),
          /* initialState */(function () {
              return /* record */[
                      /* text */initialText,
                      /* inputElement */[/* None */0]
                    ];
            }),
          /* retainedProps */component[/* retainedProps */11],
          /* reducer */(function (newText, state) {
              return /* Update */Block.__(0, [/* record */[
                          /* text */newText,
                          /* inputElement */state[/* inputElement */1]
                        ]]);
            }),
          /* subscriptions */component[/* subscriptions */13],
          /* jsElementWrapped */component[/* jsElementWrapped */14]
        ];
}

exports.valueFromEvent = valueFromEvent;
exports.component = component;
exports.setInputElement = setInputElement;
exports.make = make;
/* component Not a pure module */
